
Python 中 ‘unicodeescape’ codec can’t decode bytes in position XXX: trun错误解决方案


背景描述

今天在运用Python pillow模块处理图片时遇到一个错误

SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape

1

刚开始以为是图片名字有中文，不识别，于是在python文件的头部加上

#-*- coding:utf-8 -*-

1

但是加完这个还是报错，然后我就把图片的中文去掉还成英文，然后报错，一脸懵逼呀。后来在stackoverflow 上找到了类似的错误，原来是图片路径写的 有问题，错误代码如下

im = Image.open('C:\Users\FrankYuan\Pictures\Camera Roll\WIN_20161010_08_51_57_Pro.jpg')

1

正确结果

im = Image.open('C:\\Users\\FrankYuan\\Pictures\\Camera Roll\\WIN_20161010_08_51_57_Pro.jpg')

1

或者

im = Image.open(r'C:\Users\FrankYuan\Pictures\Camera Roll\WIN_20161010_08_51_57_Pro.jpg')

1

抑或

im = Image.open(r'C:/Users/FrankYuan/Pictures/Camera Roll/WIN_20161010_08_51_57_Pro.jpg')

1


原因：

window 读取文件可以用\，但是在字符串中\是被当作转义字符来使用，所以’d:\a.txt’会被转义成’d:\a.txt’这是正确路径，所以不会报错。而‘C:\Users\FrankYuan\Pictures\Camera Roll\WIN_20161010_08_51_57_Pro.jpg ’中经过转义之后可能就找不到路径的资源了，例如\t可能就转义成tab键了。


解决办法

python在描述路径时可以有多种方式，现列举常见的三种

方式一:转义的方式

'd:\\a.txt'

方式二:显式声明字符串不用转义

'd:r\a.txt'

方式三:使用Linux的路径/

'd:/a.txt'

1

2

3

4

5

6

7

8

9

10

11

我强烈推荐第三种写法，这在Linux和window下都是行的通的。

