异常和错误

　　1.错误分类：

　　　　错误基本分为两种：1.语法错误 2.逻辑错误

　　2.什么是异常

　　　　在python中运行发生错误的信号时

　　3.python中的异常种类

　　　　触发IndexError

　　　　触发KeyError

　　　　触发ValueError

AttributeError 试图访问一个对象没有的树形，比如foo.x，但是foo没有属性x
IOError 输入/输出异常；基本上是无法打开文件
ImportError 无法引入模块或包；基本上是路径问题或名称错误
IndentationError 语法错误（的子类） ；代码没有正确对齐
IndexError 下标索引超出序列边界，比如当x只有三个元素，却试图访问x[5]
KeyError 试图访问字典里不存在的键
KeyboardInterrupt Ctrl+C被按下
NameError 使用一个还未被赋予对象的变量
SyntaxError Python代码非法，代码不能编译(个人认为这是语法错误，写错了）
TypeError 传入对象类型与要求的不符合
UnboundLocalError 试图访问一个还未被设置的局部变量，基本上是由于另有一个同名的全局变量，
导致你以为正在访问它
ValueError 传入一个调用者不期望的值，即使值的类型是正确的

ArithmeticError
AssertionError
AttributeError
BaseException
BufferError
BytesWarning
DeprecationWarning
EnvironmentError
EOFError
Exception
FloatingPointError
FutureWarning
GeneratorExit
ImportError
ImportWarning
IndentationError
IndexError
IOError
KeyboardInterrupt
KeyError
LookupError
MemoryError
NameError
NotImplementedError
OSError
OverflowError
PendingDeprecationWarning
ReferenceError
RuntimeError
RuntimeWarning
StandardError
StopIteration
SyntaxError
SyntaxWarning
SystemError
SystemExit
TabError
TypeError
UnboundLocalError
UnicodeDecodeError
UnicodeEncodeError
UnicodeError
UnicodeTranslateError
UnicodeWarning
UserWarning
ValueError
Warning
ZeroDivisionError

异常处理

　　在用户使用程序时出现问题，如果直接报错首先用户感觉程序不好，其次用户也看不懂，如果优化一直异常处理，当出现问题时优雅的提示用户然后再退出会稍微好一些。

　　1.基本语法：

try:
    被检测的代码块
except 异常类型：
    try中一量检测到异常就执行这个位置的逻辑

s1 = 'hello'
try:
    s1[34]
except IndexError as e:
    print(e)
except KeyboardInterrupt as e:
    print(e)
except ValueError as e:
    print(e)

　　2.万能异常处理

s1 = 'hello'
try:
    int(s1)
except Exception as e:
    print(e)

　　

　　　　　　

　　　　

