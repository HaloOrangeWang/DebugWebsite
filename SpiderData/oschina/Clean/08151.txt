vite vue3项目运行报错提示，项目能正常运行浏览器运行报错。如果给是npm install安装的报错，切换yarn install 再运行项目即可。 如果是如下错误 canot read properties of undefind(reding 'modules')

yarn 安装命令 npm install -g yarn
初始化项目

yarn init 与 npm init 一样通过交互式会话创建一个 package.json

yarn init # yarn 
npm init # npm

# 跳过会话，直接通过默认值生成 package.json
yarn init --yes # 简写 -y
npm init -y

安装包

yarn add 包名 npm install 包名

yarn add 包名 -D 会记录在 package.json 的 devDependencies开发环境中 npm i 包名 -D

yarn global add 包名 全局安装 npm i 包名 -g 更新一个依赖

yarn upgrade # 升级所有依赖项，不记录在 package.json 中 npm update # npm 可以通过 ‘--save|-D’ 指定升级哪类依赖

yarn upgrade 包名 # 升级指定包 npm update 包名

yarn upgrade --latest 忽略版本规则，升级到最新版本，并且更新 package.json 移除一个依赖

yarn remove 包名
 npm uninstall 包名

安装 package.json 中的所有文件

yarn 在 node_modules 目录安装 package.json 中列出的所又依赖 npm i

yarn install 安装时，如果 node_modules 中有相应的包则不会重新下载 --force 可以强制重新下载安装

yarn install --force 强制下载安装 npm i --force 运行脚本

yarn run 用来执行在 package.json 中 scripts 属性下定义的脚本 // package.json { "scripts": { "dev": "node app.js", "start": "node app.js" } } yarn run dev # yarn 执行 dev 对应的脚本 node app.js npm run # npm

yarn start # yarn
npm start # npm

显示某个包信息

yarn info 包名 # yarn npm info 包名 # npm

yarn info 包名 --json # 输出 json 格式
npm info 包名  --json # npm

yarn info 包名 readme # 输出 README 部分
npm info 包名 readme

列出项目的所有依赖

yarn list # 列出当前项目的依赖 npm list # npm

yarn list --depth=0 # 限制依赖的深度
sudo yarn global list # 列出全局安装的模块

缓存

sudo yarn cache list # 列出已缓存的每个包 sudo yarn cache dir # 返回 全局缓存位置

