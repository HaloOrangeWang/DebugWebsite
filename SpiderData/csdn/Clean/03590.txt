戳蓝字“软件测试test”关注我们哦！

错误是程序中的问题，由于这些问题而导致程序停止执行。另一方面，当某些内部事件发生时，会引发异常，从而改变程序的正常流程。

python中会发生两种类型的错误。

语法错误

语法错误

逻辑错误（异常）

逻辑错误（异常）


语法错误

如果未遵循正确的语言语法，则会引发语法错误。

例

# 初始化amount变量
amount = 10000
  
# 检查你是否有资格
# 是否购买某某自学课程
if(amount>2999) 
    print("您有资格购买某课程")

输出：

PS C:\Users\Administrator\Desktop> & D:/Python37-32/python.exe "g:/黑苹果备份请勿删除/代码/exercise24 (1)/python加密.py"
  File "g:/黑苹果备份请勿删除/代码/exercise24 (1)/python加密.py", line 6
    if(amount>2999)
                   ^
SyntaxError: invalid syntax

它返回语法错误消息，因为在if语句后:缺少冒号。我们可以通过编写正确的语法来解决此问题。


逻辑错误（异常）

在运行时中，通过语法测试后发生错误的情况称为异常或逻辑类型。例如，当我们将任何数字除以零时，ZeroDivisionError就会引发异常，或者当我们导入一个不存在的模块时，就会引发异常ImportError。

范例1：

# 初始化amount变量
marks = 10000
  
# 用0除
a = marks / 0
print(a)

输出：

PS C:\Users\Administrator\Desktop> & D:/Python37-32/python.exe "g:/黑苹果备份请勿删除/代码/exercise24 (1)/python加密.py"
Traceback (most recent call last):
  File "g:/黑苹果备份请勿删除/代码/exercise24 (1)/python加密.py", line 5, in <module>
    a = marks / 0
ZeroDivisionError: division by zero

在上面的示例中，我们尝试将数字除以0时出现ZeroDivisionError。

示例2：缩进不正确时。

if(a<3): 
print("gfg")

输出：

PS C:\Users\Administrator\Desktop> & D:/Python37-32/python.exe "g:/黑苹果备份请勿删除/代码/exercise24 (1)/python加密.py"
  File "g:/黑苹果备份请勿删除/代码/exercise24 (1)/python加密.py", line 1
    if(a<3): 
      ^
SyntaxError: invalid character in identifier

除上述异常外，一些常见的内置异常是：


错误处理

当出现错误和异常时，我们将借助Handling方法进行处理。

用Try / Except / Finally处理异常
我们可以通过Try / Except / Finally方法处理错误。我们在try中编写不安全的代码，在except中回退代码，在finally块中返回最终代码。例

用Try / Except / Finally处理异常
我们可以通过Try / Except / Finally方法处理错误。我们在try中编写不安全的代码，在except中回退代码，在finally块中返回最终代码。

例

# 将不安全操作置于试验区
try:
     print("代码开始") 
          
     # 不安全操作执行
     print(1 / 0) 
except :
    print("发生错误") 
finally:
    print("软件测试test")

输出：

PS C:\Users\Administrator\Desktop> & D:/Python37-32/python.exe "g:/黑苹果备份请勿删除/代码/exercise24 (1)/python加密.py"
代码开始
发生错误
软件测试test

为预定义条件
引发异常当我们要为某些条件的限制进行编码时，我们可以引发异常。
例

为预定义条件
引发异常当我们要为某些条件的限制进行编码时，我们可以引发异常。
例

# 尝试错误代码
try: 
    amount = 1999
    if amount < 2999: 
          
        #  ValueError 判断并抛出异常
        raise ValueError("请在你的帐户上加钱") 
    else: 
        print("您有资格购买某自学课程”") 
              
# 如果为false，则增加值错误
except ValueError as e: 
        print(e)

输出：

请在你的帐户中加钱

Python异常处理

使用Python附加到JSON文件

使用Python读取，写入和解析JSON

在Python中初始化：您需要了解的一切

建立数据驱动，关键字驱动和混合Selenium框架这些你了解吗

