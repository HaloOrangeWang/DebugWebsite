异常处理

什么是异常？

首先要清楚，什么是异常，异常就是程序运行时发生错误的信号（在程序出现错误时，则会产生一个异常，若程序没有处理它，则会抛出该异常，程序的运行也随之终止），在python中,错误触发的异常如下

python的异常处理

异常是由错误触发的，那么错误有哪些情况呢？

1.语法错误：

2.逻辑错误

异常的种类

在平时编码过程中，常见的异常有以下这些：

当然，还有其他异常，这里就不做过多演示。出现异常，我们肯定想到要处理，不然程序就直接报错崩溃了。其实我们一直在处理异常，只是没有发现，比如要判断你输入的内容是不是数字，我们以前是这么判断的：

在这里if就是在处理异常，但是，如果我还有其他程序也要运行，那就要写成这样了：

这时候，你会发现，程序写的很长，可读性差，如果有十个这样的输入，那这个程序就没法看了，这时候，python提供了一种异常处理的方法try…except…最后，如果你的时间不是很紧张，并且又想快速的python提高，最重要的是不怕吃苦，建议你可以架微♥信：762459510 ，那个真的很不错，很多人进步都很快，需要你不怕吃苦哦！大家可以去添加上看一下~

part1 基本语法

现在用这套方法来处理上面的异常，看看效果怎么样：

这样一看代码简洁了很多啊，效果很完美

part2 异常只能用来处理指定的异常情况，其他情况不会处理

我们可以试一下，把错误类型改成别的，看看会怎样：

看来错误类型还要对应才行。

part3 多分支

这时候，有人就会觉得，万能异常这么厉害，我还要写什么其他异常的，全部用这个不就好啦？这个怎么说呢，要分两点来看吧：

1.如果你想要的效果是，无论什么异常，你都直接无视或者说用一种处理机制，那么就直接用吧，没问题，

2.如果你要根据异常类型处理不同机制，那还得用多分支的方式，最后，如果你的时间不是很紧张，并且又想快速的python提高，最重要的是不怕吃苦，建议你可以架微♥信：762459510 ，那个真的很不错，很多人进步都很快，需要你不怕吃苦哦！大家可以去添加上看一下~

当然，你可以结合多分支和万能异常一起使用啊，这样多分支的健壮性会更好、

part5 异常的其他结构

下面来看看异常处理的其他结构：

part6 主动触发异常

我们学过主动触发异常用的是raise，下面看一下能不能捕获：

part7 自定义异常

如果你想自定义一个异常，也是可以的。异常是什么，就是一个类嘛，那我们就定义一个异常类看看：

报错了，看错误提示，再看看type错误是怎么写的，原来要继承一个叫BaseException的类，再试一下：

完美了，成了。最后，如果你的时间不是很紧张，并且又想快速的python提高，最重要的是不怕吃苦，建议你可以架微♥信：762459510 ，那个真的很不错，很多人进步都很快，需要你不怕吃苦哦！大家可以去添加上看一下~

part8 断言

断言可以说就是if的一种简写，直接看例子吧：

如果判断不正确：

这个完全可以用if写：

效果完全一样

part9 try…except…的好处和用法：

try…except…就是取代了if的那种方法，让你的代码在保证可读性的情况下，还增强了健壮性，提高了容错率，使用这种方法：

1.把错误处理和你的主逻辑分开了

2.代码更容易组织，更清晰，复杂的任务更容易实现

3.更安全了，不会因为一些小错误导致程序崩溃

但是要清楚的一点是，if和try…except…都是python中处理异常的方法，不要学了try就说if和异常处理没有关系了。其次，学完这个后发现try…except…很强大，是不是每一段代码都可以加这个处理异常，就不用管报错了，这是肯定不行的，try…except…还是要慎重使用，首先try…except是你附加给你的程序的一种异常处理的逻辑，与你的主要的工作是没有关系的，这种东西加的多了，会导致你的代码可读性变差，然后异常处理本就不是你混乱逻辑的保姆，只有在错误发生的条件无法预知的情况下，才应该加上try…except[]

