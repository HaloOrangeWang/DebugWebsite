# 函数名：1. 名字最好能体现函数的功能，一般用小写字母和单下划线、数字等组合
#      2. 不可与内置函数重名（内置函数不需要定义即可直接使用）
def math(x):
# 参数：根据函数功能，括号里可以有多个参数，也可以不带参数，命名规则与函数名相同
# 规范：括号是英文括号，后面的冒号不能丢
    y = 3*x + 5
# 函数体：函数的执行过程，体现函数功能的语句，要缩进，一般是四个空格
    return y
# return语句：后面可以接多种数据类型，如果函数不需要返回值的话，可以省略

认知错误：不会遍历字符串

def my_len(words):
#函数的参数是字符串
    i=1
    while words[i]!='':
        i=i+1
    return i

print(my_len('三根皮带，四斤大豆'))

报错：
 while words[i]!=’’:
 IndexError: string index out of range

正确使用：

def my_len(words):
#函数的参数是字符串
    i=0
    for id in words:
        i=i+1
    return i

print(my_len('三根皮带，四斤大豆'))

def opening():
    print('世界这么大，和你相遇很幸运～')
    print('这里是肥鼠路易的CSDN博客')
    print('欢迎来自五湖四海的你前来踩一踩我的空间!')

opening()

这个函数不需要return语句，原因是这个函数直接在屏幕打印出内容，不需要返回值。事实上，没有return语句的函数，Python也会在末尾隐性地加上return None，即返回None值。

不能限定死数量，这时候【不定长参数】就能派上用场，即传递给参数的数量是可选的、不确定的。它的格式比较特殊，是一个星号*加上参数名

目前我们不会怎么用到不定长参数，不过了解这一个概念可以帮助我们看懂一些函数文档。

