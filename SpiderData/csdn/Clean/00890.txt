
问题描述：

想把一长串数字字符串转成整型，很怕int()不够用所以才用long()转换。结果…

报错NameError: name ‘long’ is not defined

long('4654326413210')


原因分析：

Python3.x 版本已删除 long() 函数。


解决方案：

结果可以用int函数处理很长的数字字符串…

#print(long('465432641321011'))
print(int('465432641321011'))

注意，自从Python2.2起，如果整数发生溢出，Python会自动将整数数据转换为长整数

让我们再复习一下类似类型转换函数

int(x [,base ]) 将x转换为一个整数

float(x ) 将x转换到一个浮点数

complex(real [,imag ]) 创建一个复数

str(x ) 将对象 x 转换为字符串

repr(x ) 将对象 x 转换为表达式字符串

eval(str ) 用来计算在字符串中的有效Python表达式,并返回一个对象

tuple(s ) 将序列 s 转换为一个元组

list(s ) 将序列 s 转换为一个列表

chr(x ) 将一个整数转换为一个字符

unichr(x ) 将一个整数转换为Unicode字符

ord(x ) 将一个字符转换为它的整数值

hex(x ) 将一个整数转换为一个十六进制字符串

oct(x ) 将一个整数转换为一个八进制字符串

