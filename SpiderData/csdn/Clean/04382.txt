
文章目录

💓前言

👻异常与错误的概念

👻错误分类

👾语法错误👾运行时错误👾逻辑错误

👾语法错误

👾运行时错误

👾逻辑错误

👻异常处理机制

👾捕获异常并处理👾主动抛出异常👾断言处理👾自定义异常类👾常见异常及释义

👾捕获异常并处理

👾主动抛出异常

👾断言处理

👾自定义异常类

👾常见异常及释义


💓前言


👻异常与错误的概念


👻错误分类


👾语法错误


👾运行时错误


👾逻辑错误


👻异常处理机制


👾捕获异常并处理

# 异常的捕获
a=int(input('输入除数:'))
b=int(input('输入被除数:'))
try:
    res=a/b
except ZeroDivisionError:
    print('除数不可以为0')
    # 相同处理方式的异常可以这么写
except (BaseException,TypeError):
    print('有错误')
else:
    print('您的结果为',res)
finally:
    print('感谢使用!')


👾主动抛出异常


👾断言处理

'''
3 录入一个学生的成绩，把该学生的成绩转换为A优秀、B良好、C合格、D不及格的形式，
最后将该学生的成绩打印出来。要求使用assert断言处理分数不合理(小于0或者大于100)的情况
请编写程序。
'''

n=int(input())
assert n in range(101),"您输入的成绩不合理！"
if n>=85:
	print("优秀！")
elif n>=70:
	print("良好！")
elif n>=60:
	print("合格！")
else:
	print("不及格！")


👾自定义异常类

自定义异常类以及主动抛弃异常

'''
自己定义一个异常类，继承Exception类, 捕获下面的过程：判断input()输入的字符串长度是否小于5， 
如果小于5，比如输入长度为3则输出:"The input is of length 3, expecting at least 5“，
大于5则输出"success”。 
'''
class StrLenError(Exception):
	def __init__(self,s):
		Exception.__init__(self,s)
		self.s =s
	def __str__(self):
			return f"The input is of length {len(self.s)}, expecting at least 5"
n=input()
if len(n)<=5:
	raise StrLenError(n)
else:
	print("success")


👾常见异常及释义

以下是一些常见的类及引发该类异常的错误描述:

