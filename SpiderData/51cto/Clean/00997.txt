上一篇​​Django 2.1.7 模型管理器 models.Manager 以及 元选项​​

讲述了关于Django模型管理类以及如何设置表名、字段名的元选项内容。

在了解了Django的模型相关知识点之后，那么再来详细看看Django的视图。
 前面我也基本写了​​​Django 2.1.7 视图​​，讲解了url地址的转发配置，参数获取等内容。

那么本篇章再看看如何自定义404错误、500错误等错误页。


参考文献

​​https://docs.djangoproject.com/zh-hans/2.1/ref/views/​​


首先看看开启了调试模式的Django错误页

任意访问一个不存在的url路径，Django在调试模式下就会返回错误信息。那么下面来关闭调试模式。


关闭调试模式

打开项目/settings.py文件，修改以下两项：

改为

其中放行的 ALLOWED_HOSTS 则是允许访问的域名或者IP地址，如果所有都放行可以配置​​ALLOWED_HOSTS = ['*']​​。不然会报错如下：

重启启动服务，访问刚才不存在的url路径，如下：

可以看到Django默认的404错误页了，显然不是很好看，那么我能不能自定义这个页面呢?


自定义404页面

自定义404页面当然是可以的，这个首先需要理解Django的模板的html查找顺序。
 Django的模板首先是在项目setting配置的模板路径进行优先第一个查看，然后再看应用下有没有配置templates路径，如果有则进入查看，如果没有，则进入最后Django内置的模板路径下去查找html。

那么说了那么多，怎么去自定义404错误页面？

其实只需要在模板路径下建立一个404.html页面即可，因为只要在第一优先模板路径找到了，Django也不会继续往下查找了。


在模板下创建一个404.html

再次访问页面看看是不是出现自定义的404错误页，如下：

可以看到已经是返回自定义的404错误页了。

而且使用内置的模板变量​​{{ request_path }}​​还可以设置查看这个访问的错误路径，如下：

页面访问如下：

那么其他500，503等错误页是不是也是一样的做法呢？当然是的。


自定义500页面 - 视图出错

当视图内的参数之类发生错误，访问则会提示如下：

下面也对这个500错误页面进行自定义，如下：

浏览器访问如下：


优化错误页面

上面的两个示例错误页面肯定是不好看的，当然要优化一下，如下：

在这里要注意一下，关闭调试模式后，默认static静态文件Django是不提供服务的，需要改变未非安全的启动方式才会提供，如下：

增加​​--insecure​​参数。

