
一.错误处理


1.错误处理

　　

如果在try中发生错误,那么except将捕获到指定错误,然后执行该段语句;而无论有无错误finally都会执行.


2.示例代码:

　　

所有异常的异常都继承自BaseExecption,所以可以指定BaseExecption来捕获所有异常


3.抛出错误

raise为编程者手动抛出错误
格式:
raise 错误类型(错误信息)
注意,raise语句如果不带参数，就会把当前错误原样抛出或抛出No active exception to reraise

　　


二.调试


1.print函数


2.断言:

如果a不等于0,符合预期,否则输出a is 0

可以使用 -O来关闭assert输出:

　　


3.日志记录:

示例:

　　


三.单元测试


1.引入python的unittest模块


2.编写测试类,从unittest.TestCase继承


3.重要的两种方法:

　　

　　


4.setUp()在每调用一个方法前被执行


5.tearDown()在每调用一个方法后被执行


6.运行单元测试

　　

另一种方法是在命令行通过参数-m unittest直接运行单元测试,这样可以一次运行多个单元测试


7.示例代码:

　　


四.文档测试

文档注释中写入交互命令,即可作为文档测试

　　

