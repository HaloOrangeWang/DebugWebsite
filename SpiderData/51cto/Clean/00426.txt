在编译器或是Pycharm运行代码时，调用文件之间的函数或是类不会报错，但是在终端运行时却报错没有xx模块，明明自己已经写了调用代码：from xx import xx


原因：（不想看可直接跳到解决方法）

Python在启动解释器（Interpreter）时不光会导入环境变量中sys.path发现的模块，还会导入当前工作目录下的模块。

当你在IDE中启动解释器时，当前的工作目录就是项目目录，能顺利调用同项目中的模块；但是当你通过命令行启动时，当前工作目录为你启动解释器时所在的目录，如果当时的位置不是项目目录，那么项目目录中的模块就不会被找到，因此运行的时候报错:ModuleNotFoundError: No Module named ...（在例子中我的当前目录是.../package2是项目目录底下的一个文件夹，不是项目目录，所以报错）


解决方法：
 方法很简单，就是把模块路径提供给解释器：


①（推荐） 把模块路径放到环境变量中作为全局变量（sys.path能扫描到）。

在运行的主文件开头加上sys.path.append(‘主项目文件夹路径’)

比如我的项目就在运行的主文件夹加上以下几句代码（其它文件不用加，只加一个文件就行）：

再运行主文件就不会报错啦！问题得到解决！

②在其它模块文件夹下都新建一个空的__init__.py文件，这样调用就不会出错

PS：博主被这个问题困扰了三四天了，终于找到解决的方法了，特此奉上！

