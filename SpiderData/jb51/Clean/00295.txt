Python程序可以调用一组基本的函数（即内建函数），比如print()、input()和len()等函数。Python本身也内置一组模块（即标准库）。每个模块都是一个Python程序，且包含了一组相关的函数，可以嵌入到你的程序之中，比如，math模块包含了数学运算相关的函数，random模块包含随机数相关的函数，等等。

一、import语句

在开始使用一个模块中的函数之前，必须用import语句导入该模块。

语法：

import module1[, module2[,... moduleN]]

实例：

1、使用random模块ranint() 函数：

# printRandom.py
import random
for i in range(5):
  print(random.randint(1, 10))

# result:
5
3
6
4
9

说明：因randint()函数属于random模块，必须在函数名称之前先加上random，告诉Python在random模块中寻找这个函数。

2、导入多个模块：

import math, sys, random, os

二、from import语句

这是导入模块的另一种形式，使用这种形式的 import 语句， 调用 模块中的函数时不需要 moduleName. 前缀 。但是，使用完整的名称会让代码更可读，所以最好是使用普通形式的 import 语句 。

语法

from moduleName import name1[, name2[, ... nameN]]|*

知识点扩展：

import的各种姿势：

1、import package 读这个包的__init__.py

2、import module 读这个模块全部内容

3、import package1.package2.package3.module4 读package1, package2, package3的__init__.py， 以及module4全部内容（顺序）

4、import package1.package2 读 package1, package2的__init__.py（顺序）

这些是import中发生的事情。情况1、2没什么好说的，直接用package.或者module.就可以了。

到此这篇关于导致python中import错误的原因是什么的文章就介绍到这了,更多相关python的import错误原因详解内容请搜索脚本之家以前的文章或继续浏览下面的相关文章希望大家以后多多支持脚本之家！

