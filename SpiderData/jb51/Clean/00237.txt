问题

python中 import ** 成功，但是不能调用它的函数或者属性，如下图所示

原因

log 和 setting 在python中属于自带的库函数。再重写 log 和 setting 函数文件后，即使成功引入，如果没有加标识，会默认调用自带的库函数。

本质原因：python2 和 python3 版本存在差异，很多问题看看python官网就很容易理解

解决办法

重写python自带库函数，例如 log 库函数，经常会被重写。一定要注意添加前缀，来避免调用到默认的，且在任何用到该重写文件*.py内函数，都要加前缀

本人另一篇文章对包引用有详细介绍 https://www.jb51.net/article/182291.htm

补充知识：python对库函数的引用方法

python引入库的方法有很多种，这里主要介绍一下其中的两种：

第一种引用方式：在程序头部增加：

如：import<库名>

例如：

import turtle

>>>import turtle

>>>turtle.fd(30)

这种方式引用库函数需要输入<库名>.<函数名>(库名点函数名）

第二种引用方式：

from<库名>import<函数名>或者from<库名>import*

例如：

>>>from turtle import*

>>>fd(100)

这种引用方式可以直接使用函数，不需要再加库名点

但是第一种方式用户可以重新定义一个函数叫fd，fd的功能可以是任意功能。第二种不可以重新定义fd函数，因为库turtle函数是直接调用的，但一般情况下两种引入方式没有什么区别。

有时候我们引入的库函数的名字比较长，但是我们在后面还需要经常使用这个库函数，这个时候我们就可以给这个库函数起一个比较简短的别名来使用，比如我们将turtle这个库函数命名为t:import turtle as t。这样书写我们就可以在后面的代码中用t来代替turtle了。比如之前我们要这样写来使画笔移动到（20,10）的位置：turtle.goto(20.10)，但是使用import turtle as t之后就可以这样写：t.goto(20,10)是不是简便很多了呢。

以上这篇python 成功引入包但无法正常调用的解决就是小编分享给大家的全部内容了，希望能给大家一个参考，也希望大家多多支持脚本之家。

