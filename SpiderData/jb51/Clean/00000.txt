
报错现象

File "<string>", line 1
SyntaxError: unexpected EOF while parsing

提示EOF（END OF FILE），即预期外的文件截止符。这个报错可能问题有：

1）代码中（）未配对

2）读取的string文件内容不符合函数使用规范


分析解决

小规模代码中，可以利用二分法快速定位，不断切分代码模块，打印或查看关键变量是否符合预期，从而找到出现问题的代码，确定具体哪行报错。

举例：

Y = []
print('debug...')
print(str1)
for data in str1:
    val = eval(data)
    Y.append(val)

假设，debug……过程中，发现在7行处开始异常返回并报错。

首先，检验输入变量str1，是否符合预设：全为string类型的科学计数法字符串。如符合，再单步观察函数运行结果。str1打印结果如下：

['0.000000000000000e+00', '0.000000000000000e+00', '0.000000000000000e+00', '\n']

显然，不符合预期，即原字符串切割后，末尾的换行符也被放入了进来，无法转换为数字，导致报错。

找到原因，于是就可以在倒数第一个项截止即可，从而就不会有异常字符串输入到eval()中，导致报错。

Y = []
print('debug...')
print(str1)
for i in range(len(str1) - 1):
    Y.append(eval(str1[i]))

输出正常，打工搞成。


补充：一些python最重要的内建异常类名

AttributeError：属性错误，特性引用和赋值失败时会引发属性错误

NameError：试图访问的变量名不存在

SyntaxError：语法错误，代码形式错误

Exception：所有异常的基类，因为所有python异常类都是基类Exception的其中一员，异常都是从基类Exception继承的，并且都在exceptions模块中定义。

IOError：一般常见于打开不存在文件时会引发IOError错误，也可以解理为输出输入错误

KeyError：使用了映射中不存在的关键字(键)时引发的关键字错误

IndexError：索引错误，使用的索引不存在，常索引超出序列范围，什么是索引

TypeError：类型错误，内建操作或是函数应于在了错误类型的对象时会引发类型错误

ZeroDivisonError：除数为0，在用除法操作时，第二个参数为0时引发了该错误

ValueError：值错误，传给对象的参数类型不正确，像是给int()函数传入了字符串数据类型的参数。


总结

到此这篇关于Python报错SyntaxError:unexpected EOF while parsing解决的文章就介绍到这了,更多相关SyntaxError: unexpected EOF while parsing内容请搜索脚本之家以前的文章或继续浏览下面的相关文章希望大家以后多多支持脚本之家！

