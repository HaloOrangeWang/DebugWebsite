
常见的状态

passed：测试通过

failed：断言失败

error：代码编写上的错误

xfail：预期失败，加了 @pytest.mark.xfail()


测试通过的栗子(passed)

示例代码如下：


输出结果：


断言失败的栗子(failed)


1、正常断言失败

示例代码如下：


输出结果：


2、测试方法里主动抛出异常了

示例代码如下：


输出结果：


代码编写上的错误(error)


1、fixture中有错

示例代码如下：


输出结果：

fixture里面断言失败，导致fixture标记的data会报错，使得data没有返回值；而test_error调用了错误的fixture，所以error表示代码写的有问题了


2、参数不存在

示例代码如下：


输出结果：

data参数并不存在，找不到自然就error了


总结：

测试用例的代码有异常，包括主动抛出异常或代码有异常，都算failed

当测试用例调用的fixture有异常，或传入的参数有异常的时候，都算error

如果一份测试报告中，error的测试用例数量越多，说明测试用例质量越差


预期失败的栗子（xfail）

这个和testng的异常测试差不多了，就是断言预期的异常，可以测试是否需要代码抛出异常或不抛出。

示例代码如下：


输出结果：

代码有异常，且和raised的异常类匹配，所以是xfail（算测试通过的一种，表示符合期望捕捉到的异常），并不算failed

如果和raised的异常类不匹配，则是failed


系列参考文章：

https://www.cnblogs.com/poloyy/category/1690628.html

