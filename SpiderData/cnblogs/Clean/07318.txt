要做web自动化，第一件事情就是搭建自动化测试环境，那就没法避免的要用到selenium了。

那在搭建环境和使用过程中经常会遇到以下几类问题：

1、引入selenium包失败:

出现这种错误，一般分为两种情况：

1、根本没有安装selenium库；

2、安装了selenium库，可是在导入的时候，仍然提示selenium库不存在。

解决方法：

针对第1种，那就是麻溜的去安装selenium库。pip命令安装最好！！命令：pip install selenium

针对2：

1）确认你安装的selenium第三方库安装在哪个python目录中？并确认你的selenium安装成功；

如何确认？安装的时候，会直接输出你的selenium安装到了哪里。注意观察哟。

2）确认你的代码使用的python是哪个，安装目录在哪里？是否是1）中对应的python目录。

以pycharm编辑器为例：

在pycharm当中， 每一个project都会有一个External Libraries栏。如下图：

会直接显示你当前project所用的python版本以及安装目录；

打开其下的site-packages目录，会显示所有安装的第三方库。如果能够找到selenium文件夹，则说是在这个python版本中是安装了selenium的

注意注意：pycharm现在有专业版和社区版。很多新手朋友们去用破解版的专业版，结果入了坑也不知道。

因为专业版是默认使用的 - 它给你创建的虚拟环境的。你需要手动配置成使用系统python环境 。所以高度建议，新手们使用社区版就好。

如果以上两点，都确认无误，没错，就是安装在我当前正在用的python当中。那恭喜你，可以正常引入selenium的webdriver包了。

2、调用selenium库方法失败:Module object is not callable

这个问题就好解决多啦。。。

就是使用webdriver的功能时，把功能名字给错了。你一写错，人家webdriver库根本就找不到这个名字对应的功能。自然就报了上面的错误 。

所以，正确的方式是：

browser = webdriver.Chrome()

3、浏览器版本与驱动版本不匹配的报错: call function result missing 'value'

这个问题就要从selenium环境安装方面说起了。

我们功能测试测web系统时，就是通过人工去在浏览器页面中各种点点点。但是自动化，咱们得换个实现方式了。

是通过代码来自动的去浏览器页面中各种点点点。即 python+selenium代码 与 浏览器  进行交互。

而且浏览器这个物种有多种类型，谷歌、ie、firefox、safaria......

两个完全不同的物种如何交流？？

翻译！！中间件！！ 没错，就是它了。。。为了解决这个问题，浏览器厂商提供各种的驱动软件。于是就有了chromedrver,IEdriver,geckodriver......

驱动软件可以跟我们的python+selenium自动化代码交互，也可以跟浏览器进行交互。把自动化代码要做的事情，通过驱动软件去驱动浏览器操作实现。

但素，软件从生出开始，就需要不断的长大、进化，更好的为人民服务。

所以浏览器会不断的更新，那么与其匹配的驱动软件也会同样的更新。

所以就会有：不同的驱动版本，支持不同的浏览器版本。

so，这样的报错解决方法就是：去下载匹配你当前浏览器版本的驱动。

放在你所用python版本的安装目录下面。

