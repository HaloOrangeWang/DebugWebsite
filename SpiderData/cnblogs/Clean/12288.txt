目录1、异常的传播2、如何处理异常

目录

1、异常的传播

2、如何处理异常


1、异常的传播

当在函数中出现异常时，如果在函数中对异常进行了处理，则异常不会再继续传播。如果函数中没有对异常进行处理，则异常会继续向函数调用者传播。如果函数调用者处理了异常，则不再传播，如果还没有处理，则继续向他的调用者传播，直到传递到全局作用域（主模块）如果依然没有处理，则程序终止，并且显示异常信息到控制台。所以异常的传播我们也称之为抛出异常。

异常传播示例如下：

输出结果：

说明输出结果：

当我们调用fn3()方法的时候，会先输出Hello fn3，再向下执行调用fn2()方法，以此类推到fn1()方法中。可以看到上边有三条输出语句。

当执行到fn1()方法中print(10/0)语句，出现了ZeroDivisionError异常，而fn1()方法中没有处理该异常，则向他的调用者抛出这个异常，抛给了fn2()方法，以此类推，知道fn3()方法抛给了全局作用域中的调用者，异常依然没有被处理。

最后Python的解释器会把这个异常显示在控制台中。

所以我们看到异常结果中，一行报错，向上抛了好几次。

例如：全局作用域中的代码有异常没有处理的话，就直接显示在控制台中了。

输出结果：


2、如何处理异常

在异常抛出后的任何一个调用者处理该异常都可以。

异常处理如下：

提示：

当程序运行过程中出现异常以后，所有的异常信息会被保存一个专门的异常对象中。而异常传播时，实际上就是将异常对象抛给了调用者。

而不同的错误，会对应着不同的异常对象（也就是前边说的异常类型）。

如何查看Python异常对象？

在Python的本地文档中，找到[The Python Standard Library] —> [Built-in Exceptions]，里面全是我们Python中的异常对象以及说明。

如下图所示：

