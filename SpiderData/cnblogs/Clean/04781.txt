
跨域问题


根本原因：浏览器的同源策略，浏览器拒绝不是当前域返回的数据


ps：ip地址和端口号都相同才是同一个域


CORS基本流程


浏览器将CORS请求分成两类：简单请求和非简单请求


浏览器发出CORS简单请求，只需要在头信息之中增加一个Origin字段


浏览器发出CORS非简单请求，会在正式通信之前，增加一次HTTP查询请求，称为“预检”请求（OPTIONS请求）。浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。


解决跨域问题（写好这个中间件配置一下）


补充：

支持跨域，简单请求

服务器设置响应头：Access-Control-Allow-Origin = ‘域名’ 或 ‘*’

支持跨域，复杂请求

由于复杂请求时，首先会发送“预检”请求，如果“预检”成功，则发送真实数据。

“预检”请求时，允许请求方式则需服务器设置响应头：Access-Control-Request-Method（put请求等）

“预检”请求时，允许请求头则需服务器设置响应头：Access-Control-Request-Headers


Djangocorsheaders（第三方cors）

DRF后端实现跨域我们使用一个第三方扩展——— djangocorsheaders

安装

注册

添加中间件

配置白名单

或者直接允许所有主机跨域

