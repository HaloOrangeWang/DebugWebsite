在Python开发的过程中，经常会遇到各种各样的小问题，比如在一台计算机上调试好的程序，迁移到另外一台机子上后往往会应为工程项目依赖库的缺失而造成错误。

　　除了一遍又一遍对着被抛出错误去重新install各种相关的依赖库，有没有更好的方法来解决Python开发过程中依赖库的打包呢？答案是肯定的。

　　类似于JavaScript的npm，Python也有它强大的包管理工具——pip，我们可以用pip导出项目中的dependency：

1 $ pip freeze > requirements.txt

　　然后通过以下命令来安装dependency:

1 $ pip install -r requirements.txt

　　经过上述两个步骤，就可以在服务器部署的时候直接安装需要的依赖库，而不用等着报错再去一个一个安装了。

　　另外，有些小细节也是值得一提的，那就是"pip freeze > requirements.txt"指令必须用在整个工程项目完全跑通了（也就是项目依赖已经全部安装完成）的情况下，才能将所有的有关依赖库写入requirements.txt文件中去，而“pip install -r requirements.txt”指令则使用于服务器部署时较为合适。

