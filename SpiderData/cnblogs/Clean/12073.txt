文章目录
1. Python有哪些特点和优点？2. 深拷贝和浅拷贝之间的区别是什么？3. 列表和元组之间的区别是？4. 解释Python中的三元运算子5. 在Python中如何实现多线程？6. 解释一下Python中的继承7. 什么是Flask？8. 在Python中是如何管理内存的？9. 解释Python中的help()和dir()函数10. 当退出Python时，是否释放全部内存？11. 解释使用*args和*kwargs的含义12. 解释Python中的join()和split()函数13. Python中的pass语句是什么？14. Python中的闭包是什么？15. 在Python中有多少种运算符？16. 怎样获取字典中所有键的列表？
结束语


文章目录

1. Python有哪些特点和优点？2. 深拷贝和浅拷贝之间的区别是什么？3. 列表和元组之间的区别是？4. 解释Python中的三元运算子5. 在Python中如何实现多线程？6. 解释一下Python中的继承7. 什么是Flask？8. 在Python中是如何管理内存的？9. 解释Python中的help()和dir()函数10. 当退出Python时，是否释放全部内存？11. 解释使用*args和*kwargs的含义12. 解释Python中的join()和split()函数13. Python中的pass语句是什么？14. Python中的闭包是什么？15. 在Python中有多少种运算符？16. 怎样获取字典中所有键的列表？

1. Python有哪些特点和优点？

2. 深拷贝和浅拷贝之间的区别是什么？

3. 列表和元组之间的区别是？

4. 解释Python中的三元运算子

5. 在Python中如何实现多线程？

6. 解释一下Python中的继承

7. 什么是Flask？

8. 在Python中是如何管理内存的？

9. 解释Python中的help()和dir()函数

10. 当退出Python时，是否释放全部内存？

11. 解释使用*args和*kwargs的含义

12. 解释Python中的join()和split()函数

13. Python中的pass语句是什么？

14. Python中的闭包是什么？

15. 在Python中有多少种运算符？

16. 怎样获取字典中所有键的列表？

结束语


1. Python有哪些特点和优点？

答：作为一门编程入门语言，Python主要有以下特点和优点：
 可解释
 具有动态特性
 面向对象
 简明简单
 开源
 具有强大的社区支持


2. 深拷贝和浅拷贝之间的区别是什么？

答：深拷贝就是将一个对象拷贝到另一个对象中，这意味着如果你对一个对象的拷贝做出改变时，不会影响原对象。在Python中，我们使用函数deepcopy()执行深拷贝，导入模块copy，如下所示：

而浅拷贝则是将一个对象的引用拷贝到另一个对象上，所以如果我们在拷贝中改动，会影响到原对象。我们使用函数function()执行浅拷贝，使用如下所示：


3. 列表和元组之间的区别是？

答：二者的主要区别是列表是可变的，而元组是不可变的。举个例子，如下所示：

Traceback (most recent call last):
 File “<pyshell#97>”, line 1, in 
 mytuple[1]=2

会出现以下报错：
 TypeError: ‘tuple’ object does not support item assignment


4. 解释Python中的三元运算子

不像C++，我们在Python中没有?:，但我们有这个：
 [on true] if [expression] else [on false]

如果表达式为True，就执行[on true]中的语句。否则，就执行[on false]中的语句。
 下面是使用它的方法：

运行结果：2

运行结果：Hi


5. 在Python中如何实现多线程？

一个线程就是一个轻量级进程，多线程能让我们一次执行多个线程。我们都知道，Python是多线程语言，其内置有多线程工具包。
 Python中的GIL（全局解释器锁）确保一次执行单个线程。一个线程保存GIL并在将其传递给下个线程之前执行一些操作，这会让我们产生并行运行的错觉。但实际上，只是线程在CPU上轮流运行。当然，所有的传递会增加程序执行的内存压力。


6. 解释一下Python中的继承

当一个类继承自另一个类，它就被称为一个子类/派生类，继承自父类/基类/超类。它会继承/获取所有类成员（属性和方法）。
 继承能让我们重新使用代码，也能更容易的创建和维护应用。Python支持如下种类的继承：
 单继承：一个类继承自单个基类
 多继承：一个类继承自多个基类
 多级继承：一个类继承自单个基类，后者则继承自另一个基类
 分层继承：多个类继承自单个基类
 混合继承：两种或多种类型继承的混合


7. 什么是Flask？

Flask是Python编写的一款轻量级Web应用框架。其 WSGI 工具箱采用 Werkzeug ，模板引擎则使用 Jinja2。Flask使用 BSD 授权。其中两个环境依赖是Werkzeug和jinja2，这意味着它不需要依赖外部库。正因如此，我们将其称为轻量级框架。
 Flask会话使用签名cookie让用户查看和修改会话内容。它会记录从一个请求到另一个请求的信息。不过，要想修改会话，用户必须有密钥Flask.secret_key。


8. 在Python中是如何管理内存的？

Python有一个私有堆空间来保存所有的对象和数据结构。作为开发者，我们无法访问它，是解释器在管理它。但是有了核心API后，我们可以访问一些工具。Python内存管理器控制内存分配。
 另外，内置垃圾回收器会回收使用所有的未使用内存，所以使其适用于堆空间。


9. 解释Python中的help()和dir()函数

Help()函数是一个内置函数，用于查看函数或模块用途的详细说明：

运行结果为：
 Help on function copy in module copy:
 copy(x)
 Shallow copy operation on arbitrary Python objects.
 See the module’s doc string for more info.

Dir()函数也是Python内置函数，dir() 函数不带参数时，返回当前范围内的变量、方法和定义的类型列表；带参数时，返回参数的属性、方法列表。
 以下实例展示了 dir 的使用方法：

运行结果为：
 [‘annotations’, ‘call’, ‘class’, ‘closure’, ‘code’, ‘defaults’, ‘delattr’, ‘dict’, ‘dir’, ‘doc’, ‘eq’, ‘format’, ‘ge’, ‘get’, ‘getattribute’, ‘globals’, ‘gt’, ‘hash’, ‘init’, ‘init_subclass’, ‘kwdefaults’, ‘le’, ‘lt’, ‘module’, ‘name’, ‘ne’, ‘new’, ‘qualname’, ‘reduce’, ‘reduce_ex’, ‘repr’, ‘setattr’, ‘sizeof’, ‘str’, ‘subclasshook’]


10. 当退出Python时，是否释放全部内存？

答案是No。循环引用其它对象或引用自全局命名空间的对象的模块，在Python退出时并非完全释放。
 另外，也不会释放C库保留的内存部分。


11. 解释使用args和kwargs的含义

当我们不知道向函数传递多少参数时，比如我们向传递一个列表或元组，我们就使用*args。

运行结果为：
 3
 2
 1
 4
 7

在我们不知道该传递多少关键字参数时，使用**kwargs来收集关键字参数。

运行结果为：
 a.1
 b.2
 c.7


12. 解释Python中的join()和split()函数

Join()能让我们将指定字符添加至字符串中。

运行结果：
 ‘1,2,3,4,5’

Split()能让我们用指定字符分割字符串。

运行结果：
 [‘1’, ‘2’, ‘3’, ‘4’, ‘5’]


13. Python中的pass语句是什么？

在用Python写代码时，有时可能还没想好函数怎么写，只写了函数声明，但为了保证语法正确，必须输入一些东西，在这种情况下，我们会使用pass语句。

同样，break语句能让我们跳出循环。

最后，continue语句能让我们跳到下个循环。


14. Python中的闭包是什么？

当一个嵌套函数在其外部区域引用了一个值时，该嵌套函数就是一个闭包。其意义就是会记录这个值。

结果：
 7


15. 在Python中有多少种运算符？

在Python中，我们有7种运算符：算术运算符、关系运算符、赋值运算符、逻辑运算符、位运算符、成员运算符、身份运算符。


16. 怎样获取字典中所有键的列表？

使用 keys() 获取字典中的所有键


结束语

