最近有不少小伙伴咨询关于pyton第三方包导入的问题，今天我们就来聊聊第三方包导入那些事。

随着对python学习的渐入臻境，越来越多的小伙伴们开始导入自己所需的第三方包，实现各种各样的功能。但是，他（她）们遇到了一个非常烦恼的问题

自己用pip已经下载好的第三方包，import总是报错，显示没有该moudle.

pip显示scipy模块已安装好

但在pycharm里，我们import导入时，编辑器却报错，告诉我们没有这个module！

这是为什么呢？

原来，python在import导入第三包时，会默认搜索系统模块下的sys.path路径。而sys.path是个列表对象，我们可通过简单的打印语句显示查看我们的import导入路径。

而pip下载后的第三方包都统一放在lib下的site-packages文件夹下。

与我们打印出的import路径对比，不难发现，我们的import路径中并没有sit-packages的路径位置。所以，即使我们用pip下载好第三方包在本地，import的搜索路径中没有这个位置，编辑器当然就会报错。

找到问题的发生原因后，我们便可以开始解决问题了。思路就是：将第三方包的路径添加到import的默认搜索路径中。而sys.path又是个列表对象，我们通过append( )方法就可实现我们的需求，到此问题便可迎刃而解！

为使大家能够清晰地认识，这里用了print语句输出了之前的路径，大家实际操作中大可不必如此。了解原理即可。即使算上print语句，我们的有效代码也只有7行！

代码如下所示：

从输出结果中我们可以看到第三方包site-packages的路径已成功加入import的搜索路径。

但是当重启编辑器时，会发现添加的路径已消失。可见append方法只能对当前有效，退出后便会失效！

那么，我们怎么永久添加到sys.path路径下？ 我们可以通过新建.pth文件来实现。

在前面程序输出的结果中我们可以看到，D盘中我们也有一个site-packages的路径。这是因为，为避免文件杂乱，将pycharm的项目没有建在pyhton默认目录，而是更改到了D盘的“python演练场”。

我们找到D盘--python演练场--venv---lib---site-packages文件夹，并在其中新建文本文档。

在新建的文本中，写入我们“pip下载到的第三方文件库site-packages的”路径位置。

将文本保存后，我们将文件改为“mypath.pth"。注意：最后，一定要将txt格式的改为pth,否则python无法识别。

之后，我们便可以”一劳永逸“地import引入pip下载的第三方包了，当然重要的是，这种方法还可以引入你自己根据你的需求写的实用python脚本了。我们引入scipy第三包，可以明显地看到，编辑器已为我们自动补全了。

这里用的是python3.6和pycharm3.x。

