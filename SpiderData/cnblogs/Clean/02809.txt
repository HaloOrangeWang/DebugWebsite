对于python编程的代码，如果需要进行相应的检查其中的错误或者异常，并且确定出现异常语句的大致范围，主要有以下四种方法：

1、第一种方法：遇错即止（告知原因）

try

　　......（所需检查语句）

　　......(出错语句)

　　......（后面的代码）%将不进行执行

except exception（异常类型）as reason:

　　print("出错了，出错的原因是："+str(reason))

2、第二种方法：遇错可继续执行后面的代码：

try

　　......（所需检查语句）

　　......(出错语句)

except exception（异常类型）as reason:

　　print("出错了，出错的原因是”："+str(reason))

finally：

......（出错语句后面的代码）%将继续执行

3、第三种方法：只需要报错，不通知原因（并不推荐，可以尝试）

try

　　......（所需检查语句）

　　......(出错语句)

　　......（后面的代码）

except :

　　print("出错了”)

4、第四种方法：只需要报错，不通知原因（推荐，可以尝试）

try

　　......（所需检查语句）

　　......(出错语句)

　　......（后面的代码）

except （各种异常种类，，，）:

　　print("出错了”)

