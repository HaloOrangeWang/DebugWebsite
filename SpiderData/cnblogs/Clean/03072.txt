通常python3里面如果有中文，在不连接其他设备和程序的情况下，报错信息大致如下：

SyntaxError: Non-UTF-8 code starting with '\xd6' in file

这里面的\xd6可以是其他编码，代表的是你程序里第一个中文的前两位编码

原因：你的程序里变量的编码方式和解释器解析的编码方式不一致，而从解释器的报错信息可以看出，解释器的编码是utf-8

解决方法：使程序里变量的编码方式和解释器解析的编码方式保持一致

那么问题来了，两个编码方式为什么不一样呢，网上非常流行的解释：有中文就要加#coding:gbk,因为中文需要gbk来编码；这个解释是错的，因为utf-8也可以对中文编码所以问题在于我们程序里的变量编码方式不是utf-8

我们pycharm中变量的编码方式设定路径：file-settings-editor-file encodings-project encoding（默认被选成了GBK，原因我也不知道）

解决方法一：如果我们把项目的编码方式设定为utf-8,那么变量的编码方式就是utf-8 ,python的默认编码方式也是utf-8,那就可以正常输出中文什么其他代码都不用加

s="中文"
print(s)

输出

中文

解决方法二：在代码上方加一行#coding:gbk;这就是在告诉编译器，我变量的编码方式是GBK，你要用GBK来解码，同样也可以解决问题

#coding:gbk
s="中文"
print(s)

输出

中文

问题解决了，但是要注意：如果用第一种方式解决问题，那你的py文件是utf-8编码，如果用第二种方式解决问题，那么你的py文件是gbk编码

这个在写文件的时候，不会对写入值有影响，写入值受f=open(path,mode,encoding)里面的encoding控制，要尤其注意

注：python2的报错与python3有些区别，python2默认的编解码方式是ASCII，所以如果有中文就要在文件头加上#coding：utf-8

