首先得明确包和模块。

包：在一个目录下存在__init__.py，那么该目录就是一个包。

模块：一个.py文件就是一个模块。

我们可以通过from 包 import 模块来引入python文件，

也可以使用from 包.模块 import 模块中的函数或类。

具体看一下例子。

假设我们现在有以下的目录：

test_aTmp2()和test_bTmp4()是tmp2.py和tmp4.py里面的函数。

假设我们想在main.py中使用a_utils包下的aUtils模块和b_utils包下的bUtils模块，我们可以这样：

注意这里的两种用法，

一种是我们直接通过：from 包.包.模块 import 函数

另一种是from 包.包 import 模块，并通过 模块.函数 来使用相关的函数。

下一个，假设我们想在tmp4.py使用tmp3.py中的函数，因为在同一个包下，我们自然的是这么使用：

我们在tmp4.py中继续使用b_uitls包下的bUtils.py。

现在的tmp4.py里面是以上那样，假设我们现在重新运行之前的main.py：

你会发现报错了：

我们在main.py里面导入了tmp4，tmp4里面调用了tmp3，我门运行tmp4.py是没问题，运行main.py有问题。这是因为，相对于main.py所在的目录，tmp3所在是在包package_b下面，在tmp4中就不能直接导入，可以改写成以下方式：

这样就不会报错了：

但是这时我们去重新运行tmp4.py，发现会报错了：

这里.表示的是__main__，我暂时也不清楚这时是什么意思，不过我们可以这么改写下：

这样不论我们是运行main.py还是tmp4.py就都不会报错了。

以上是自己在建项目中碰到的一个问题。

