
一 什么是异常

异常就是程序运行时发生错误的信号（在程序出现错误时，则会产生一个异常，若程序没有处理它，则会抛出该异常，程序的运行也随之终止），

在python中,错误触发的异常如下

错误分成两种

1.语法错误（这种错误，根本过不了python解释器的语法检测，必须在程序执行前就改正）

2.逻辑错误


二 异常的种类

AttributeError 试图访问一个对象没有的树形，比如foo.x，但是foo没有属性x

IOError 输入/输出异常；基本上是无法打开文件

ImportError 无法引入模块或包；基本上是路径问题或名称错误

IndentationError 语法错误（的子类） ；代码没有正确对齐

IndexError 下标索引超出序列边界，比如当x只有三个元素，却试图访问x[5]

KeyError 试图访问字典里不存在的键

KeyboardInterrupt Ctrl+C被按下

NameError 使用一个还未被赋予对象的变量

SyntaxError Python代码非法，代码不能编译(个人认为这是语法错误，写错了）

TypeError 传入对象类型与要求的不符合

UnboundLocalError 试图访问一个还未被设置的局部变量，基本上是由于另有一个同名的全局变量，
导致你以为正在访问它

ValueError 传入一个调用者不期望的值，即使值的类型是正确的


三 异常处理

为了保证程序的健壮性与容错性，即在遇到错误时程序不会崩溃，我们需要对异常进行处理

如果错误发生的条件是不可预知的，则需要用到try...except：在错误发生之后进行处理

平常报错


四 try..except...详细用法

默认情况下会执行try: 里面的代码  如果try:里面的代码不执行的 except里面代码不执行

如果try里面的代码报错了，会执行except里面代

定义多种错误类型

一次性捕获所有错误

异常处理完整代码块

主动触发异常

raise Exception

执行 except Exception as e:

　　　　print(e) 语句 　　= 主动错误一下

自定义异常

断言

# 如果条件不成立 报错
assert 1==2

# 如果条件成立 不报错

assert 1==1

