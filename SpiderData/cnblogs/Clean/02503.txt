
Python报错总结:

常见异常


常见异常

1，NameError: name 'a' is not defined：未定义函数名

2，IndentationError: unindent does not match any outer indentation level ：代码缩进问题

3，IndentationError: unexpected indent：代码缩进问题　　　　　　　　　　　　　　　　　

4，TypeError: %d format: a number is required, not str ：类型错误

5，SyntaxError: invalid syntax：语法错误

6，ValueError: unsupported format character 'S' (0x53) at index 15：不支持此语法

7，ZeroDivisionError: division by zero

8，BUG：虫子

9，程序打印一堆错误提示，抛出异常

10，默认的异常处理动作是终止程序

异常捕获


异常捕获

语法：

1，异常捕获：一般错误代码就会执行报错，不会执行后续的代码，但是设定了异常捕获可以避免某些报错发生，而且可以继续执行代码 如下：

运行结果：　

此处不可以除0
=========================

2，

运行结果：

报错：此处调用函数为两个分别是：str,int
-------------

3，except 后面不添加错误类型，默认匹配所有错误类型（精确不行，太模糊，很少有人这样用看自己情况）

运行结果：

调用函数报错,请检查函数调用方式是否正确

4，

运行结果：

手动抛出异常　


手动抛出异常　

1，raise TypeError('错误的描述')，直接终止代码运行。

运行结果：

自定义异常


自定义异常

Exception：所有常用异常的父类

NameError

NameError

TypeError

TypeError

IndentationError

KeyboardInterrupt  ： ctrl + c 终止程序

KeyboardInterrupt  ： ctrl + c 终止程序

等等

SystemExit：系统异常：ctrl + c 键盘信号

1，

1，

运行结果：

2，　　　

运行结果：　

断言


断言

判断异常：assert

判断返回值为bool的语句
如果Bool语句返回值为False 那么引发AssertionError

判断返回值为bool的语句

如果Bool语句返回值为False 那么引发AssertionError

>>> assert 1 == 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AssertionError

　　

　　

　　

　　

　

