
Mixins机制

为什么要有：子类继承父类的时候，可能会碰到需要继承多个父类的情况，那么继承关系也分主类和辅类，既保持主类的功能，也有辅类的功能。

命名方式，我们需要将主类和辅类区分开来，python 对于mixin类的命名方式一般以 Mixin, able, ible 为后缀，然后一般按照规范，调用的时候辅类应该在主类的左边。


内置方法

定义在类的内部，双下划线开头并以上下划线结尾的方法

它的特点是，在某种情况下会自动触发执行

为了定制化我的类或者对象


str内置方法


del内置方法


相对比较重要的


isinstance

isinstance() 函数来判断一个对象是否是一个已知的类型，类似 type()。

语法：isinstance(object, classinfo)

object -- 实例对象。

classinfo -- 可以是直接或间接类名、基本类型或者由它们组成的元组

如果对象的类型与参数二的类型（classinfo）相同则返回 True，否则返回 False。


issubclass

issubclass()方法用于判断参数 class 是否是类型参数 classinfo 的子类

语法：issubclass(class, classinfo)

class -- 类。

classinfo -- 类。

如果 class 是 classinfo 的子类返回 True，否则返回 False。


getattr方法


setattr方法

为对象设置值的时候触发,对象中属性中有值的时候也会触发


delattr方法

删除值的时候触发


call方法


反射

python是动态语言，而反射(reflection)机制被视为动态语言的关键。

反射机制指的是在程序的运行状态中

对于任意一个类，都可以知道这个类的所有属性和方法；

对于任意一个对象，都能够调用他的任意方法和属性。

这种动态获取程序信息以及动态调用对象的功能称为反射机制

简而言之就是通过字符串来操作类方法


getattr


hasattr


setattr


delattr


扩展（重要）


异常处理

1、什么是异常

异常是程序发生错误时的信号，程序一旦出错就会抛出异常

2、为什么要处理异常

为了增强程序的健壮性，即便程序在运行过程中出错了，也不要终止程序，而是捕捉异常并处理：将出错信息记录到日志内

3、如何处理

错误的两大来源

3.1语法上的错误

3.2逻辑上的错误

针对逻辑上的异常又分成两种处理方式

错误发生是可以预知的，那我们就可以用if判断来解决该问题

如果是不可预知的，那我们必须要用异常处理语法来解决

需要注意的是 else 需要和 except 搭配使用


抛出异常

Python 使用 raise 语句抛出一个指定的异常。

raise语法格式如下：


自定义异常

你可以通过创建一个新的异常类来拥有自己的异常。异常类继承自 Exception 类，可以直接继承，或者间接继承

