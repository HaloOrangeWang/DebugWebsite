　　　　　　　　　　　　　　　　　　　　python基础-异常（exception）处理

　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　作者：尹正杰

版权声明：原创作品，谢绝转载！否则将追究法律责任。

　　

　　


　　程序中难免出现错误，而错误分成两种,即语法错误和逻辑错误。语法错误根本过不了python解释器的语法检测，必须在程序执行前就改正，还有一种就是逻辑错误，对逻辑错误的处理是本篇博客介绍的重点。

一.什么是异常

　　1>.python解释器检测到错误，触发异常（也允许程序员自己触发异常）;

　　2>.程序员编写特定的代码，专门用来捕捉这个异常（这段代码与程序逻辑无关，与异常处理有关）;

　　3>.如果捕捉成功则进入另外一个处理分支，执行你为其定制的逻辑，使程序不会崩溃，这就是异常处理;

二.为什么要处理异常

　　python解析器去执行程序，检测到了一个错误时，触发异常，异常触发后且没被处理的情况下，程序就在当前异常处终止，后面的代码不会运行，谁会去用一个运行着突然就崩溃的软件。所以你必须提供一种异常处理机制来增强你程序的健壮性与容错性 .

三.如何进行异常处理

　　首先须知，异常是由程序的错误引起的，语法上的错误跟异常处理无关，必须在程序运行前就修正.

1>.常见的异常

2>.单分支异常处理

3>.多分支异常处理

4>.万能异常处理

5>.异常处理的else语句

6>.异常处理之finally语句

7>.主动触发异常

8>.断言

四.什么时候用异常处理

　　其实异常处理我是不建议大家用它的，try....except语句应该尽量少用，因为他本身就是你附加给程序的一个异常处理的逻辑，与你的主要的工作是没有关系的，这种东西加的多了，会导致你的代码可读性变差，只有在有些异常无法预知的情况下，才应该加上try...except,其它的逻辑错误应该尽量修正。

