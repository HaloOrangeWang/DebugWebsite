目录迭代器相关可迭代对象一、什么是迭代?二、什么是可迭代对象?三、哪些数据是可迭代对象?迭代器对象一、什么是迭代器对象?二、迭代器对象的特征三、迭代器对象的作用四、迭代器对象如何取值五、迭代器对象补充说明for循环内部原理和本质for循环内部原理for循环本质异常处理一、什么是异常?二、异常信息的组成部分三、异常的分类四、异常的类型五、异常处理实际操作六、异常处理补充

目录

迭代器相关可迭代对象一、什么是迭代?二、什么是可迭代对象?三、哪些数据是可迭代对象?迭代器对象一、什么是迭代器对象?二、迭代器对象的特征三、迭代器对象的作用四、迭代器对象如何取值五、迭代器对象补充说明

可迭代对象一、什么是迭代?二、什么是可迭代对象?三、哪些数据是可迭代对象?

一、什么是迭代?

二、什么是可迭代对象?

三、哪些数据是可迭代对象?

迭代器对象一、什么是迭代器对象?二、迭代器对象的特征三、迭代器对象的作用四、迭代器对象如何取值五、迭代器对象补充说明

一、什么是迭代器对象?

二、迭代器对象的特征

三、迭代器对象的作用

四、迭代器对象如何取值

五、迭代器对象补充说明

for循环内部原理和本质for循环内部原理for循环本质

for循环内部原理

for循环本质

异常处理一、什么是异常?二、异常信息的组成部分三、异常的分类四、异常的类型五、异常处理实际操作六、异常处理补充

一、什么是异常?

二、异常信息的组成部分

三、异常的分类

四、异常的类型

五、异常处理实际操作

六、异常处理补充


迭代器相关


可迭代对象


一、什么是迭代?

迭代其实就是更新换代，每一次迭代的过程都是依据上一次的结果

eg:软件的更新其实就是版本的迭代


二、什么是可迭代对象?

内置有__iter__方法的都可以称之为可迭代对象


三、哪些数据是可迭代对象?


迭代器对象


一、什么是迭代器对象?

可迭代对象调用__iter__方法之后生成的结果就是迭代器对象


二、迭代器对象的特征

同时含有__iter__方法和__next__方法


三、迭代器对象的作用

迭代器对象能够极大的节省存储空间


四、迭代器对象如何取值

调用__next__方法，如果取不到值则会直接报错


五、迭代器对象补充说明

一些双下方法具有简便写法

可迭代对象调用一次__iter__方法变为迭代器对象，继续调用多次的结果还是迭代器对象本身

迭代取值的要求


for循环内部原理和本质


for循环内部原理


for循环本质


异常处理


一、什么是异常?

代码运行出错就是异常，异常会导致程序立刻停止。外号是bug,在编程过程中需要极力避免出现


二、异常信息的组成部分


三、异常的分类


四、异常的类型


五、异常处理实际操作

python提供了异常处理功能来处理python程序在运行中出现的异常和错误，你可以使用该功能来调试python程序。

基本语法结构

针对未知错误类型


六、异常处理补充

结合else使用

结合finally使用

全部整合到一起使用

断言

主动报错

