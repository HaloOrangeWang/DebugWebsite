1. 什么是异常处理
    异常是错误发生的信号,一旦程序出错就会产生一个异常,如果该异常
    没有被应用程序处理,那么该异常就会抛出来,程序的执行也随之终止

异常包含三个部分:
        　　1. traceback异常的追踪信息
        　　2. 异常的类型
        　　3. 异常的信息

错误分为两大类:
        　　1. 语法上的错误:在程序运行前就应该立即修正
        　　2. 逻辑上的错误

2. 为何要异常处理

避免程序因为异常而崩溃,所以在应用程序中应该对异常进行处理,从而增强程序的健壮性

print('adsfsadf'

age=input('>>: ').strip()
print(age > 10) #TypeError

for i in 10: #TypeError
    pass

import os
os.xxx #AttributeError

1 / 0 #ZeroDivisionError:

打印系统报错原文

import traceback

断言

格式：

assert 条件，断言失败的自定义信息

断言条件通过，代码进行网下，断言条件失败，直接抛出异常（异常信息可以自定义）

a = 2
assert (a>1)
print('断言成功，程序继续向下执行')

b = 2
assert (b>=3),'b小于3'    # 报错 AssertionError: b小于3
print('断言失败，程序报错')

