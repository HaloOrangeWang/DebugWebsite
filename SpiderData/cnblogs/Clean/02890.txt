由于现在很多底层协议用C/C++，然后机器学习或者深度学习等算法模型使用基于Python的TensorFlow来实现。所以现在C++用来做框架，做软件界面，然后调用Python的算法脚本来进行计算是很常见的需求。

我们的项目中也存在着这样的需求。下面来记录一下相应的实现方式。

背景：C++上用MFC做界面，Python上是import了numpy与pandas模块的处理功能（后续的基于sklearn与TensorFlow的脚本还没嵌入，配置方式相同，后续实验会再放上来）

软件配置：win10/64位+VS2013+Python3.6/64位

在Python的安装目录下，找到libs文件夹，将其中的python36.lib复制一份并命名python36_d.lib，功能是用于VS的调试

在VS中新建项目（随便什么项目，我使用的是控制台程序），在项目-项目属性中设置活动平台为X64，目的是匹配Python的版本

在VS的项目属性里面：C++->常规->附加包含目录，输入..\include

链接器->常规->附加目录项，输入..\libs；链接器->输入->附加依赖项，添加python36.lib；python36_d.lib;

python36.dll拷贝到Debug目录下(注意是项目名->X64->debug文件夹里面，与***.exe同目录)；将py文件拷贝到Debug目录下(同上)

我的py文件中，需要调用的是其中一个readcase函数，其中需要传入一个文件路径参数，再对文件里面的内容进行相应的处理。

C++代码（这里面我参考了网上的一些案例，上上了一些注释-_-||，需要注意的点我在后面再补充）

结果能跑起来，暂时先这样吧，想到什么再说吧。后面的TensorFlow实验，有时间做了再上传。

这里面有很多坑，Python2.7.9的pandas装不上，活动平台win32位的各种问题，传参数组的传入等等，Python的Lib库的导入啥的，都需要慢慢尝试摸索

其实一直疑惑C++的内存回收与Python的内存回收机制不同，怎么协同工作，还是懂的太少了。。。

参考：

https://www.cnblogs.com/yanzi-meng/p/8066944.html

https://blog.csdn.net/u012968002/article/details/80388939?utm_source=blogxgwz2

https://blog.csdn.net/Pennypinch/article/details/78342948?utm_source=blogxgwz0

https://www.cnblogs.com/earvin/p/5423868.html

https://blog.csdn.net/hao5335156/article/details/79515480

https://blog.csdn.net/u014679795/article/details/82215511?utm_source=blogxgwz0

https://blog.csdn.net/percypan/article/details/79570255

https://blog.csdn.net/shadow_dreamer/article/details/47817937

