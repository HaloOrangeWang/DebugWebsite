在经历了无数的折腾之后，算是折腾，最后采用的是陈翔学长的脚本加上可爱的shell调整装好的。 链接：p4Install

也许是ubuntu18.04的问题，也有可能是我自己把这个系统折腾的有点杂乱的原因，中途出现的问题一度让我抓瞎了好久。


安装p4c-bm


命令


问题

问题是出在最后一条命令，显示的错误是

错误的意思就是找不到version这个模块，因为setup.py要调用的模块和其不在一个目录下，所以在相对应的目录p4c<bm下有个__init__.py的文件来帮助执行，但是却找不到同目录下的version模块。 其实第一时间我的修改方法是将原语句修改成了

1 from .version import get_version_str

然后这玩意又找不到同目录下的_version了，最后在询问过学长之后，了解到这个setup.py是在python2环境下运行的，然而18.04的系统默认运行的貌似是3？而这个代码正好与3不兼容，就会产生冲突，在3中反而要使用absolute imports。于是将命令修改为

1 sudo python2 setup.py install

就成功了。ヽ(✿ﾟ▽ﾟ)ノ


安装bmv2


命令

关于make后面的参数-j是并行的意思，根据自己电脑cpu的核心情况选择，可以加快编译的速度。


问题

这里我出于习惯在其中加入了一句make check来检查编译以后的结果是否可用。 然后就被报了错：

查看完testsuit.log之后发现是thrift的问题，然后就跑到镜像网站上下了一份thrift0.12.0的压缩包来安装，结果安装还出错了，说什么缺少java的组件，导致buildfaild。真是坑中带坑，最后发现是自己openjdk有问题，干脆就下了个oracle的jdk8（其实jdk9也会报错）。然后就安装成功了。 然后继续重装bmv2，然后继续同样的报错。(°ー°〃)，心中一万只草泥马呀。 折腾了一天，最终去问了问学长，结果让我尝试了下安装。 结果居然，安装成功了，成功了，功了。既然你安装没有问题，你报错个什么劲啊。又是系统的锅喽。


安装p4c

这玩意需要挺多依赖的，还需要安装protobuf，然后gcc/g++和cmake。


问题

原脚本中gcc和g++采用的是4.9的，这个在新的系统里已经找不到源了，所以我就直接用gcc/g++ 5.5的版本了。

cmake也是，那个源甚至没有了release，所以cmake我是用的3.10的。

然后更悲惨的是安装到一半，分配给ubuntu的硬盘满了……，然后又迫不得已转到u盘系统分了点硬盘给/目录。

然后最后我在处理完一切编译之后又来了一次make check。这次更狠了，fail了将近200个……一狠心，安装！然后又没报错……合着又玩我呢。


总结

虽然不知道以后使用会不会出现新的问题，感觉又挖了许多坑。

