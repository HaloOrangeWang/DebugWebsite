打开文件 在python，使用open函数，可以打开一个已经存在的文件，或者创建一个新文件 open(文件名，访问模式) 示例如下： f = open(‘test.txt’, ‘w’)或者f = open('test.txt', ‘r')

关闭文件 close( )

写数据(write) 使用write()可以完成向文件写入数据

读数据(read) 使用read(num)可以从文件中读取数据，num表示要从文件中读取的数据的长度（单位是字节），如果没有传入num，那么就表示读取文件中所有的数据

注意： 如果用open打开文件时，如果使用的"r"，那么可以省略，即只写 open('test.txt') 如果没有文件，打开报错，存在该文件才能操作 如果文件中存在中文显示，会出现乱码需要添加encoding='utf-8'

读数据（readlines） 就像read没有参数时一样，readlines可以按照行的方式把整个文件中的内容进行一次性读取，并且返回的是一个列表，其中每一行的数据为一个元素

读数据（readline）

文件的相关操作 有些时候，需要对文件进行重命名、删除等一些操作，python的os模块中都有这么功能 1. 文件重命名 os模块中的rename()可以完成对文件的重命名操作 rename(需要修改的文件名, 新的文件名)

2. 删除文件 os模块中的remove()可以完成对文件的删除操作 remove(待删除的文件名) import os os.remove("毕业论文.txt") 3. 创建文件夹 import os os.mkdir("张三") 4. 获取当前目录 import os os.getcwd()

捕获异常 try...except...

except捕获多个异常

获取异常的信息描述

捕获所有异常

else 咱们应该对else并不陌生，在if中，它的作用是当条件不满足时执行的实行；同样在try...except...中也是如此，即如果没有捕获到异常，那么就执行else中的事情

try...finally... try...finally...语句用来表达这样的情况： 在程序中，如果一个段代码必须要执行，即无论异常是否产生都要执行，那么此时就需要使用finally。 比如文件关闭，释放锁，把数据库连接返还给连接池等

你可以用raise语句来引发一个异常。异常/错误对象必须有一个名字，且它们应是Error或Exception类的子类

