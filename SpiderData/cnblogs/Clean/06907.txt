目录一、模块搜索路径的顺序1.1 验证先从内存中找1.2 验证先从内置中找1.3 验证从sys.path中找二、搜索路径以执行文件为准

目录

一、模块搜索路径的顺序1.1 验证先从内存中找1.2 验证先从内置中找1.3 验证从sys.path中找

1.1 验证先从内存中找

1.2 验证先从内置中找

1.3 验证从sys.path中找

二、搜索路径以执行文件为准


一、模块搜索路径的顺序

模块其实就是一个文件，如果要执行文件，首先就需要找到模块的路径（某个文件夹）。如果模块的文件路径和执行文件不在同一个文件目录下，我们就需要指定模块的路径。

模块的搜索路径指的就是在导入模块时需要检索的文件夹。

导入模块时查找模块的顺序是：

先从内存中已经导入的模块中寻找

内置的模块

环境变量sys.path中找

注意：sys.path的第一个值是当前执行文件的所在的文件夹


1.1 验证先从内存中找

如果我们在运行run.py文件的时候，快速删除mmm.py文件，我们会发现文件会继续运行，而不会报错，因为mmm已经被导入内存当中。如果我们再一次运行run.py时会报错，因为mmm.py已经被删除了。


1.2 验证先从内置中找


1.3 验证从sys.path中找

如果mmm.py在/Users/mac/Desktop/video/python路径下，而执行文件路径为/Users/mac/Desktop/video/python/day16，如果普通导入一定会报错，我们可以把/Users/mac/Desktop/video/python添加到环境变量sys.path中，防止报错。


二、搜索路径以执行文件为准

假设我们有上述的目录结构的文件，文件内代码分别是：

其中run.py文件的执行路径是/Users/mac/Desktop/video/python/day16/模块搜索路径练习，如果我们在m1.py中直接使用import m2导入m2会报错，而使用from dir1 import m2导入m2则会成功，因为搜索路径以执行文件为准，dir1和run.py是同目录下的，因此run.py的环境变量能找到dir1；而m2和run.py不是同目录下的，因此run.py的环境变量无法直接找到m2。

