什么是异常

语法错误  应该在写代码的时候就规避掉

# SyntaxError   语法错误
# NameError name 名称错误

什么时候最容易出异常 (当你要处理的内容不确定的时候)

　　有用户参与

　　有外界数据接入  :  从文件中读  或从网络上获取

单分支

l = ['login','register']
for num,i in enumerate(l,1):
    print(num,i)

多分支

多分支合并

万能异常

def buy():
    print('buy')
    name

def back():
    print('back')
    [][1]

def show():
    print('show')
    1/0

as语法  能够将具体错误信息打印出来

万能异常, 相当于 Except  Exception(异常)

多支行 + 万能异常  :  万能异常应该永远放在异常处理的最下面

def buy():
    print('buy')
    name

def back():
    print('back')
    [][1]

def show():
    print('show')
    1/0

else分支

finally  分支

异常处理的几种情况

主动抛出异常 : 是给其它开发者用的

# raise ValueError
# raise ValueError('你写的不对')
# django是别人写的程序 框架 --> 程序员用

断言  - 语法

自定义异常 : 面向对象之后

# 异常处理的忠告,在最外层的异常处理应该在所有的开发结束之后才放
# main()
    #sdhjlkghl

努力  奋斗

