
目标

了解异常

捕获异常

异常的else

异常finally

异常的传递

自定义异常


1. 了解异常

当检测到一个错误时，解释器就无法继续执行了，反而出现了一些错误的提示，这就是所谓的"异常"。

例如：以r方式打开一个不存在的文件。


2. 异常的写法


2.1 语法


2.2 快速体验

需求：尝试以r模式打开文件，如果文件不存在，则以w方式打开。


2.3 捕获指定异常


2.3.1 语法


2.3.2 体验

注意：

如果尝试执行的代码的异常类型和要捕获的异常类型不一致，则无法捕获异常。

一般try下方只放一行尝试执行的代码。


2.3.3 捕获多个指定异常

当捕获多个异常时，可以把要捕获的异常类型的名字，放到except 后，并使用元组的方式进行书写。


2.3.4 捕获异常描述信息


2.3.5 捕获所有异常

Exception是所有程序异常类的父类。


2.4 异常的else

else表示的是如果没有异常要执行的代码。


2.5 异常的finally

finally表示的是无论是否异常都要执行的代码，例如关闭文件。


3. 异常的传递

体验异常传递

需求：

​	1. 尝试只读方式打开test.txt文件，如果文件存在则读取文件内容，文件不存在则提示用户即可。

​	2. 读取内容要求：尝试循环读取内容，读取过程中如果检测到用户意外终止程序，则except捕获异常并提示用户。


4. 自定义异常

在Python中，抛出自定义异常的语法为 raise 异常类对象。

需求：密码长度不足，则报异常（用户输入密码，如果输入的长度不足3位，则报错，即抛出自定义异常，并捕获该异常）。


5. 总结

异常语法

捕获异常

自定义异常

